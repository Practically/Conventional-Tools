image: node:12

stages:
  - lint
  - test
  - build
  - package
  - release
  - deploy

cache:
  paths:
    - node_moduels/

before_script:
  - yarn install

bump:composer:
  allow_failure: true
  variables:
    GIT_EMAIL: gitbot@baln.co.uk
    GIT_USER: Gitbot
    GIT_STRATEGY: clone
  services:
    - mysql:5.7
  rules:
    - if: '$CRON == "true" && $TASK == "bump"'
  script:
    - apt update && apt install -y git
    - cp .env.test .env
    - git config --global user.email "$GIT_EMAIL"
    - git config --global user.name "$GIT_USER"
    - git reset --hard HEAD
    - git checkout -b bump/yarn || git checkout bump/yarn
    - yarn upgrade
    - |
      git add yarn.lock
      git commit -m "chore: update yarn dependencies"
      git push https://gitlab-ci-token:${CT_TOKEN}@git.baln.co.uk/general/conventional-tools.git bump/yarn -o merge_request.create -o merge_request.target=next -o merge_request.merge_when_pipeline_succeeds -o merge_request.remove_source_branch

lint:commits:
  stage: lint
  rules:
    - if: '$CRON != "true"'
  script:
    - ./bin/run commitlint

test:
  stage: test
  rules:
    - if: '$CRON != "true"'
  script:
    - ln -s $(pwd)/bin/run /usr/local/bin/conventional-tools
    - git config --global user.email "test@test.com"
    - git config --global user.name "Tester"
    - yarn prepack
    - TEST_OUTPUT=1 yarn test

lint:code:
  stage: lint
  rules:
    - if: '$CRON != "true"'
  script:
    - ./node_modules/.bin/prettier -c src/**/* docs/**/*

build:
  stage: build
  script:
    - apt update && apt install -y p7zip-full
    - yarn build -t linux-x64
    - rm dist/**/*linux-x64.tar.gz
  artifacts:
    paths:
      - dist
  only:
    - master
    - next

docker-image-next:
  stage: package
  image: docker
  dependencies:
    - build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME || true
    - docker build --pull --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  only:
    - next

release:
  stage: release
  dependencies:
    - build
  variables:
    GIT_EMAIL: gitbot@baln.co.uk
    GIT_USER: Gitbot
    GIT_STRATEGY: clone
  script:
    - git config --global user.email "$GIT_EMAIL"
    - git config --global user.name "$GIT_USER"
    - git checkout $CI_COMMIT_BRANCH
    - ./bin/run release-semver
  only:
    - master

docker-image:
  stage: package
  image: docker
  dependencies:
    - build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --pull --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - master

publish:npm:
  stage: package
  script:
    - cp "$NPM_RC" ~/.npmrc
    - yarn prepack
    - npm publish --access=public
  only:
    - master

pages:
  stage: deploy
  script:
    - npm install -g docpress
    - docpress build
  artifacts:
    paths:
      - public
  only:
    - master
